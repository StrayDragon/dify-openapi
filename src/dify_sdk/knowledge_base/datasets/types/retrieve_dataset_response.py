# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .retrieve_dataset_response_query import RetrieveDatasetResponseQuery
from .retrieve_dataset_response_records_item import RetrieveDatasetResponseRecordsItem


class RetrieveDatasetResponse(UniversalBaseModel):
    query: typing.Optional[RetrieveDatasetResponseQuery] = None
    records: typing.Optional[typing.List[RetrieveDatasetResponseRecordsItem]] = pydantic.Field(default=None)
    """
    Search result list
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
