# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ProcessRuleRulesSubchunkSegmentation(UniversalBaseModel):
    """
    Sub-chunk segmentation rules
    """

    separator: typing.Optional[str] = pydantic.Field(default=None)
    """
    Segmentation identifier, only one separator is allowed. Default is ***
    """

    max_tokens: typing.Optional[int] = pydantic.Field(default=None)
    """
    Maximum length (tokens), must be less than parent level
    """

    chunk_overlap: typing.Optional[int] = pydantic.Field(default=None)
    """
    Segment overlap refers to a certain overlap between segments when segmenting data (optional)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
