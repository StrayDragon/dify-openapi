# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .metadata_condition_comparison_operator import MetadataConditionComparisonOperator
from .metadata_condition_value import MetadataConditionValue


class MetadataCondition(UniversalBaseModel):
    """
    Single metadata filtering condition
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Metadata field name
    """

    comparison_operator: typing.Optional[MetadataConditionComparisonOperator] = pydantic.Field(default=None)
    """
    Comparison operator
    """

    value: typing.Optional[MetadataConditionValue] = pydantic.Field(default=None)
    """
    Comparison value
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
