# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .get_workflow_logs_response_data_item_created_by_end_user import GetWorkflowLogsResponseDataItemCreatedByEndUser
from .get_workflow_logs_response_data_item_workflow_run import GetWorkflowLogsResponseDataItemWorkflowRun


class GetWorkflowLogsResponseDataItem(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Identifier
    """

    workflow_run: typing.Optional[GetWorkflowLogsResponseDataItemWorkflowRun] = pydantic.Field(default=None)
    """
    Workflow execution log
    """

    created_from: typing.Optional[str] = pydantic.Field(default=None)
    """
    Source
    """

    created_by_role: typing.Optional[str] = pydantic.Field(default=None)
    """
    Role
    """

    created_by_account: typing.Optional[str] = pydantic.Field(default=None)
    """
    Account
    """

    created_by_end_user: typing.Optional[GetWorkflowLogsResponseDataItemCreatedByEndUser] = pydantic.Field(default=None)
    """
    User
    """

    created_at: typing.Optional[int] = pydantic.Field(default=None)
    """
    Creation time
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
