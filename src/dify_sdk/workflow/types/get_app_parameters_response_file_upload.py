# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .get_app_parameters_response_file_upload_audio import GetAppParametersResponseFileUploadAudio
from .get_app_parameters_response_file_upload_custom import GetAppParametersResponseFileUploadCustom
from .get_app_parameters_response_file_upload_document import GetAppParametersResponseFileUploadDocument
from .get_app_parameters_response_file_upload_image import GetAppParametersResponseFileUploadImage
from .get_app_parameters_response_file_upload_video import GetAppParametersResponseFileUploadVideo


class GetAppParametersResponseFileUpload(UniversalBaseModel):
    """
    File upload configuration
    """

    document: typing.Optional[GetAppParametersResponseFileUploadDocument] = pydantic.Field(default=None)
    """
    Document settings
    """

    image: typing.Optional[GetAppParametersResponseFileUploadImage] = pydantic.Field(default=None)
    """
    Image settings
    """

    audio: typing.Optional[GetAppParametersResponseFileUploadAudio] = pydantic.Field(default=None)
    """
    Audio settings
    """

    video: typing.Optional[GetAppParametersResponseFileUploadVideo] = pydantic.Field(default=None)
    """
    Video settings
    """

    custom: typing.Optional[GetAppParametersResponseFileUploadCustom] = pydantic.Field(default=None)
    """
    Custom settings
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
