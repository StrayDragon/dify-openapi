# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .get_app_parameters_response_file_upload_document_transfer_methods_item import (
    GetAppParametersResponseFileUploadDocumentTransferMethodsItem,
)


class GetAppParametersResponseFileUploadDocument(UniversalBaseModel):
    """
    Document settings
    """

    enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether enabled
    """

    number_limits: typing.Optional[int] = pydantic.Field(default=None)
    """
    Document quantity limit, default 3
    """

    transfer_methods: typing.Optional[typing.List[GetAppParametersResponseFileUploadDocumentTransferMethodsItem]] = (
        pydantic.Field(default=None)
    )
    """
    Transfer method list: `remote_url`, `local_file`, must choose one
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
