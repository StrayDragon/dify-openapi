# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .chat_history_message_agent_thoughts_item import ChatHistoryMessageAgentThoughtsItem
from .chat_history_message_feedback import ChatHistoryMessageFeedback
from .chat_history_message_message_files_item import ChatHistoryMessageMessageFilesItem
from .retriever_resource import RetrieverResource


class ChatHistoryMessage(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Message ID
    """

    conversation_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Conversation ID
    """

    inputs: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    User input parameters
    """

    query: typing.Optional[str] = pydantic.Field(default=None)
    """
    User input/question content
    """

    message_files: typing.Optional[typing.List[ChatHistoryMessageMessageFilesItem]] = pydantic.Field(default=None)
    """
    Message files
    """

    agent_thoughts: typing.Optional[typing.List[ChatHistoryMessageAgentThoughtsItem]] = pydantic.Field(default=None)
    """
    Agent thinking content (only non-empty in Agent mode)
    """

    answer: typing.Optional[str] = pydantic.Field(default=None)
    """
    Response message content
    """

    created_at: typing.Optional[int] = pydantic.Field(default=None)
    """
    Creation time
    """

    feedback: typing.Optional[ChatHistoryMessageFeedback] = pydantic.Field(default=None)
    """
    Feedback information
    """

    retriever_resources: typing.Optional[typing.List[RetrieverResource]] = pydantic.Field(default=None)
    """
    Citation and attribution segment list
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
