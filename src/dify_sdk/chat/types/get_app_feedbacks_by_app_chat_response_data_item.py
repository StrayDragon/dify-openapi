# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class GetAppFeedbacksByAppChatResponseDataItem(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Feedback ID
    """

    app_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Application ID
    """

    conversation_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Conversation ID
    """

    message_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Message ID
    """

    rating: typing.Optional[str] = pydantic.Field(default=None)
    """
    Rating type (like/dislike)
    """

    content: typing.Optional[str] = pydantic.Field(default=None)
    """
    Feedback content
    """

    from_source: typing.Optional[str] = pydantic.Field(default=None)
    """
    Source
    """

    from_end_user_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    End user ID
    """

    from_account_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Account ID
    """

    created_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    Creation time
    """

    updated_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    Update time
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
