# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .get_application_parameters_by_app_generation_response_file_upload_audio_transfer_methods_item import (
    GetApplicationParametersByAppGenerationResponseFileUploadAudioTransferMethodsItem,
)


class GetApplicationParametersByAppGenerationResponseFileUploadAudio(UniversalBaseModel):
    """
    Audio settings
    Currently only supports audio types: mp3, m4a, wav, webm, amr
    """

    enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether enabled
    """

    number_limits: typing.Optional[int] = pydantic.Field(default=None)
    """
    Audio quantity limit, default 3
    """

    transfer_methods: typing.Optional[
        typing.List[GetApplicationParametersByAppGenerationResponseFileUploadAudioTransferMethodsItem]
    ] = pydantic.Field(default=None)
    """
    Transfer method list, must choose one
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
