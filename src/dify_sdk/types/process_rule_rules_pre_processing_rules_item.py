# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .process_rule_rules_pre_processing_rules_item_id import (
    ProcessRuleRulesPreProcessingRulesItemId,
)
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ProcessRuleRulesPreProcessingRulesItem(UniversalBaseModel):
    id: typing.Optional[ProcessRuleRulesPreProcessingRulesItemId] = pydantic.Field(default=None)
    """
    Unique identifier for preprocessing rule
    """

    enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether this rule is selected
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
