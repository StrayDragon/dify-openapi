# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class DocumentMetadata(UniversalBaseModel):
    """
    Document metadata, varies based on document type
    """

    title: typing.Optional[str] = pydantic.Field(default=None)
    """
    Title
    """

    language: typing.Optional[str] = pydantic.Field(default=None)
    """
    Language
    """

    author: typing.Optional[str] = pydantic.Field(default=None)
    """
    Author
    """

    publisher: typing.Optional[str] = pydantic.Field(default=None)
    """
    Publisher
    """

    publication_date: typing.Optional[str] = pydantic.Field(default=None)
    """
    Publication date
    """

    isbn: typing.Optional[str] = pydantic.Field(default=None)
    """
    ISBN number (for book type only)
    """

    category: typing.Optional[str] = pydantic.Field(default=None)
    """
    Category
    """

    url: typing.Optional[str] = pydantic.Field(default=None)
    """
    URL address (for web page type only)
    """

    topic: typing.Optional[str] = pydantic.Field(default=None)
    """
    Topic
    """

    keywords: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Keywords
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Description
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
