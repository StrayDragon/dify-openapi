openapi: 3.0.0
info:
  title: Dify API
  description: |
    Dify API 提供了一系列接口用于文本生成、对话和工作流功能。
    支持文本生成型应用、对话型应用、工作流应用和高级对话型应用。
    所有 API 请求都需要在 Authorization HTTP Header 中包含应用级 API-Key。
  version: 0.15.3

servers:
  - url: https://api.dify.ai/v1
    description: Dify API 服务器

  - url: "{api_url}"
    variables:
      api_url:
        default: https://api.dify.ai/v1
        description: 自定义 API 服务器 URL

security:
  - bearerApiKeyAuth: []

components:
  securitySchemes:
    bearerApiKeyAuth:
      type: http
      scheme: bearer

  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          description: 错误代码
        status:
          type: integer
          description: HTTP 状态码
        message:
          type: string
          description: 错误信息描述
      required:
        - code
        - status
        - message

    Usage:
      type: object
      properties:
        prompt_tokens:
          type: integer
          description: 提示词使用的 token 数量
        completion_tokens:
          type: integer
          description: 补全使用的 token 数量
        total_tokens:
          type: integer
          description: 总共使用的 token 数量
        prompt_unit_price:
          type: string
          description: 提示词单价
        prompt_price_unit:
          type: string
          description: 提示词价格单位
        prompt_price:
          type: string
          description: 提示词总价
        completion_unit_price:
          type: string
          description: 补全单价
        completion_price_unit:
          type: string
          description: 补全价格单位
        completion_price:
          type: string
          description: 补全总价
        total_price:
          type: string
          description: 总价格
        currency:
          type: string
          description: 货币单位
        latency:
          type: number
          description: 延迟时间

    RetrieverResource:
      type: object
      properties:
        position:
          type: integer
          description: 位置
        dataset_id:
          type: string
          description: 数据集ID
        dataset_name:
          type: string
          description: 数据集名称
        document_id:
          type: string
          description: 文档ID
        document_name:
          type: string
          description: 文档名称
        segment_id:
          type: string
          description: 分段ID
        score:
          type: number
          description: 相关度分数
        content:
          type: string
          description: 内容

    BaseMessage:
      type: object
      properties:
        message_id:
          type: string
          description: 消息唯一 ID
        created_at:
          type: integer
          description: 消息创建时间戳
        metadata:
          type: object
          properties:
            usage:
              $ref: "#/components/schemas/Usage"
            retriever_resources:
              type: array
              items:
                $ref: "#/components/schemas/RetrieverResource"

    CompletionMessage:
      allOf:
        - $ref: "#/components/schemas/BaseMessage"
        - type: object
          properties:
            mode:
              type: string
              description: App 模式，固定为 completion
            answer:
              type: string
              description: 完整回复内容

    ChatMessage:
      allOf:
        - $ref: "#/components/schemas/BaseMessage"
        - type: object
          properties:
            conversation_id:
              type: string
              description: 会话ID
            mode:
              type: string
              description: App 模式，固定为 chat
            answer:
              type: string
              description: 完整回复内容

    WorkflowMessage:
      type: object
      properties:
        workflow_run_id:
          type: string
          description: workflow 执行 ID
        task_id:
          type: string
          description: 任务 ID
        data:
          type: object
          properties:
            id:
              type: string
              description: workflow 执行 ID
            workflow_id:
              type: string
              description: 关联 Workflow ID
            status:
              type: string
              enum: [running, succeeded, failed, stopped]
              description: 执行状态
            outputs:
              type: object
              description: 输出内容
            error:
              type: string
              description: 错误原因
            elapsed_time:
              type: number
              description: 耗时(s)
            total_tokens:
              type: integer
              description: 总使用 tokens
            total_steps:
              type: integer
              description: 总步数
            created_at:
              type: integer
              description: 开始时间
            finished_at:
              type: integer
              description: 结束时间

    StreamEvent:
      type: object
      properties:
        event:
          type: string
          enum:
            [
              message,
              message_end,
              tts_message,
              tts_message_end,
              message_replace,
              error,
              ping,
              workflow_started,
              node_started,
              node_finished,
              workflow_finished,
              agent_message,
              agent_thought,
              message_file,
            ]
          description: 事件类型
        task_id:
          type: string
          description: 任务 ID
        message_id:
          type: string
          description: 消息唯一 ID
        conversation_id:
          type: string
          description: 会话 ID
        workflow_run_id:
          type: string
          description: workflow 执行 ID
        answer:
          type: string
          description: 回复内容
        audio:
          type: string
          description: 语音合成音频数据（base64编码）
        data:
          type: object
          description: 事件相关数据
        metadata:
          type: object
          properties:
            usage:
              $ref: "#/components/schemas/Usage"
            retriever_resources:
              type: array
              items:
                $ref: "#/components/schemas/RetrieverResource"
        created_at:
          type: integer
          description: 创建时间戳

    UploadedFile:
      type: object
      properties:
        id:
          type: string
          description: 文件 ID
        name:
          type: string
          description: 文件名
        size:
          type: integer
          description: 文件大小（byte）
        extension:
          type: string
          description: 文件后缀
        mime_type:
          type: string
          description: 文件 mime-type
        created_by:
          type: string
          description: 上传人 ID
        created_at:
          type: integer
          description: 上传时间

    Conversation:
      type: object
      properties:
        id:
          type: string
          description: 会话 ID
        name:
          type: string
          description: 会话名称
        inputs:
          type: object
          description: 用户输入参数
        status:
          type: string
          description: 会话状态
        introduction:
          type: string
          description: 开场白
        created_at:
          type: integer
          description: 创建时间
        updated_at:
          type: integer
          description: 更新时间

    FileInput:
      type: object
      properties:
        type:
          type: string
          enum: [document, image, audio, video, custom]
          description: 文件类型
        transfer_method:
          type: string
          enum: [remote_url, local_file]
          description: 传递方式
        url:
          type: string
          description: 远程URL
        upload_file_id:
          type: string
          description: 上传文件ID

  responses:
    Error400:
      description: 请求错误
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Error404:
      description: 资源不存在
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Error500:
      description: 服务器错误
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

paths:
  /completion-messages:
    post:
      summary: 发送消息(文本生成型应用)
      description: 发送请求给文本生成型应用
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - inputs
              properties:
                inputs:
                  type: object
                  properties:
                    query:
                      type: string
                      description: 用户输入的文本内容
                  required:
                    - query
                response_mode:
                  type: string
                  enum: [streaming, blocking]
                  description: |
                    响应模式:
                    - streaming: 流式模式（推荐），基于 SSE 实现类似打字机输出
                    - blocking: 阻塞模式，等待执行完毕后返回结果
                user:
                  type: string
                  description: 用户标识
                files:
                  type: array
                  items:
                    $ref: "#/components/schemas/FileInput"
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompletionMessage"
            text/event-stream:
              schema:
                $ref: "#/components/schemas/StreamEvent"
        "400":
          $ref: "#/components/responses/Error400"
        "404":
          $ref: "#/components/responses/Error404"
        "500":
          $ref: "#/components/responses/Error500"

  /chat-messages:
    post:
      summary: 发送对话消息(对话型应用)
      description: 创建会话消息
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: 用户输入/提问内容
                inputs:
                  type: object
                  description: 允许传入 App 定义的各变量值
                response_mode:
                  type: string
                  enum: [streaming, blocking]
                  description: |
                    响应模式:
                    - streaming: 流式模式（推荐），基于 SSE 实现类似打字机输出
                    - blocking: 阻塞模式，等待执行完毕后返回结果
                user:
                  type: string
                  description: 用户标识
                conversation_id:
                  type: string
                  description: 会话 ID
                files:
                  type: array
                  items:
                    $ref: "#/components/schemas/FileInput"
                auto_generate_name:
                  type: boolean
                  description: 是否自动生成标题
                  default: true
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
            text/event-stream:
              schema:
                $ref: "#/components/schemas/StreamEvent"
        "400":
          $ref: "#/components/responses/Error400"
        "404":
          $ref: "#/components/responses/Error404"
        "500":
          $ref: "#/components/responses/Error500"

  /workflows/run:
    post:
      summary: 执行工作流(工作流应用)
      description: 执行 workflow，没有已发布的 workflow，不可执行
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - inputs
                - response_mode
                - user
              properties:
                inputs:
                  type: object
                  description: 工作流输入参数
                response_mode:
                  type: string
                  enum: [streaming, blocking]
                  description: 响应模式
                user:
                  type: string
                  description: 用户标识
                files:
                  type: array
                  items:
                    $ref: "#/components/schemas/FileInput"
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowMessage"
            text/event-stream:
              schema:
                $ref: "#/components/schemas/StreamEvent"
        "400":
          $ref: "#/components/responses/Error400"
        "404":
          $ref: "#/components/responses/Error404"
        "500":
          $ref: "#/components/responses/Error500"

  /files/upload:
    post:
      summary: 上传文件
      description: |
        上传文件并在发送消息时使用。
        支持的文件类型取决于应用类型和配置。
        上传的文件仅供当前终端用户使用。
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 要上传的文件
                user:
                  type: string
                  description: 用户标识
              required:
                - file
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadedFile"
        "400":
          $ref: "#/components/responses/Error400"
        "413":
          description: 文件太大
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "415":
          description: 不支持的文件类型
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "503":
          description: 存储服务错误
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /conversations:
    get:
      summary: 获取会话列表
      description: 获取当前用户的会话列表
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
        - name: last_id
          in: query
          schema:
            type: string
          description: 当前页最后一条记录的ID
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: 每页记录数
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at]
            default: -updated_at
          description: 排序字段
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Conversation"
                  has_more:
                    type: boolean
                  limit:
                    type: integer

  /conversations/{conversation_id}:
    delete:
      summary: 删除会话
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
          description: 会话ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: string
                  description: 用户标识
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]

  /conversations/{conversation_id}/name:
    post:
      summary: 会话重命名
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                name:
                  type: string
                  description: 新名称
                auto_generate:
                  type: boolean
                  default: false
                  description: 是否自动生成
                user:
                  type: string
                  description: 用户标识
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Conversation"

  /messages:
    get:
      summary: 获取会话历史消息
      parameters:
        - name: conversation_id
          in: query
          required: true
          schema:
            type: string
        - name: user
          in: query
          required: true
          schema:
            type: string
        - name: first_id
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChatMessage"
                  has_more:
                    type: boolean
                  limit:
                    type: integer

  /messages/{message_id}/feedbacks:
    post:
      summary: 消息反馈
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rating
                - user
              properties:
                rating:
                  type: string
                  enum: [like, dislike, null]
                  description: 反馈类型
                user:
                  type: string
                  description: 用户标识
                content:
                  type: string
                  description: 反馈内容
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]

  /audio-to-text:
    post:
      summary: 语音转文字
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 语音文件
                  maxLength: 15728640 # 15MB
                user:
                  type: string
                  description: 用户标识
                  example: "user123"
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    description: 转换后的文本

  /text-to-audio:
    post:
      summary: 文字转语音
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message_id:
                  type: string
                  description: 消息ID
                text:
                  type: string
                  description: 待转换文本
                user:
                  type: string
                  description: 用户标识
      responses:
        "200":
          description: 成功响应
          content:
            audio/wav:
              schema:
                type: string
                format: binary

  /info:
    get:
      summary: 获取应用基本信息
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: 应用名称
                  description:
                    type: string
                    description: 应用描述
                  tags:
                    type: array
                    items:
                      type: string
                    description: 应用标签

  /parameters:
    get:
      summary: 获取应用参数
      responses:
        "200":
          description: 成功响应
          content:
            application/json:
              schema:
                type: object
                properties:
                  opening_statement:
                    type: string
                    description: 开场白
                  suggested_questions:
                    type: array
                    items:
                      type: string
                    description: 开场推荐问题列表
                  suggested_questions_after_answer:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: 回答后推荐问题设置
                  speech_to_text:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: 语音转文本设置
                  retriever_resource:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: 引用和归属设置
                  annotation_reply:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: 标记回复设置
                  user_input_form:
                    type: array
                    items:
                      type: object
                    description: 用户输入表单配置
                  file_upload:
                    type: object
                    description: 文件上传配置
                  system_parameters:
                    type: object
                    description: 系统参数
