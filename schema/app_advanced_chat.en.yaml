openapi: 3.0.0
info:
  title: Dify API - Workflow Orchestration Chat Application
  description: |
    Dify API provides a series of interfaces for workflow orchestration chat applications.
    Chat applications support session persistence, allowing previous chat history to be used as context for responses, suitable for chat/customer service AI, etc.
    All API requests require an application-level API-Key in the Authorization HTTP Header.
    It is strongly recommended that developers store the API-Key on the backend rather than sharing or storing it on the client side to prevent API-Key leakage and financial loss.
    official raw document: https://github.com/langgenius/dify/blob/1.4.0/web/app/components/develop/template/template_advanced_chat.en.mdx
  version: 1.4.0
servers:
  - url: 'https://api.dify.ai/v1'
    description: Dify API Server
  - url: '{api_url}'
    variables:
      api_url:
        default: 'https://api.dify.ai/v1'
        description: Custom API server URL
  - url: 'http://ai.urchinet.lan/v1'
    description: author of dify-openapi dev server
security:
  - bearerApiKeyAuth: []
components:
  securitySchemes:
    bearerApiKeyAuth:
      type: http
      scheme: bearer
  responses:
    Error400:
      description: Request error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error401:
      description: Non authorized or authentication failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error404:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error500:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        status:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Error message description
      required:
        - code
        - status
        - message
    Usage:
      type: object
      properties:
        prompt_tokens:
          type: integer
          description: Number of tokens used for prompts
        completion_tokens:
          type: integer
          description: Number of tokens used for completion
        total_tokens:
          type: integer
          description: Total number of tokens used
        prompt_unit_price:
          type: string
          description: Unit price for prompts
        prompt_price_unit:
          type: string
          description: Price unit for prompts
        prompt_price:
          type: string
          description: Total price for prompts
        completion_unit_price:
          type: string
          description: Unit price for completion
        completion_price_unit:
          type: string
          description: Price unit for completion
        completion_price:
          type: string
          description: Total price for completion
        total_price:
          type: string
          description: Total price
        currency:
          type: string
          description: Currency unit
        latency:
          type: number
          description: Latency time
    RetrieverResource:
      type: object
      properties:
        position:
          type: integer
          description: Position
        dataset_id:
          type: string
          description: Dataset ID
        dataset_name:
          type: string
          description: Dataset name
        document_id:
          type: string
          description: Document ID
        document_name:
          type: string
          description: Document name
        segment_id:
          type: string
          description: Segment ID
        score:
          type: number
          description: Relevance score
        content:
          type: string
          description: Content
    ChatCompletionResponse:
      type: object
      properties:
        event:
          type: string
          description: 'Event type, fixed as message'
          enum:
            - message
        task_id:
          type: string
          description: Task ID for request tracking and stopping responses
        id:
          type: string
          description: Unique ID
        message_id:
          type: string
          description: Unique message ID
        conversation_id:
          type: string
          description: Conversation ID
        mode:
          type: string
          description: 'App mode, fixed as chat'
          enum:
            - chat
        answer:
          type: string
          description: Complete response content
        metadata:
          type: object
          properties:
            usage:
              $ref: '#/components/schemas/Usage'
            retriever_resources:
              type: array
              items:
                $ref: '#/components/schemas/RetrieverResource'
          description: Metadata
        created_at:
          type: integer
          description: Message creation timestamp
    ChunkChatCompletionResponse:
      type: object
      properties:
        event:
          type: string
          enum:
            - message
            - message_file
            - message_end
            - tts_message
            - tts_message_end
            - message_replace
            - workflow_started
            - node_started
            - node_finished
            - workflow_finished
            - error
            - ping
          description: Event type
        task_id:
          type: string
          description: Task ID for request tracking and stopping responses
        message_id:
          type: string
          description: Unique message ID
        conversation_id:
          type: string
          description: Conversation ID
        workflow_run_id:
          type: string
          description: Workflow execution ID
        answer:
          type: string
          description: LLM text chunk content (for message event) or replacement content (for message_replace event)
        audio:
          type: string
          description: 'Voice synthesis audio data (base64 encoded, for tts_message event)'
        id:
          type: string
          description: Unique file ID (for message_file event)
        type:
          type: string
          description: 'File type, currently only ''image'' (for message_file event)'
        belongs_to:
          type: string
          description: 'File ownership, ''user'' or ''assistant'' (for message_file event)'
        url:
          type: string
          description: File access URL (for message_file event)
        metadata:
          type: object
          properties:
            usage:
              $ref: '#/components/schemas/Usage'
            retriever_resources:
              type: array
              items:
                $ref: '#/components/schemas/RetrieverResource'
          description: Metadata (for message_end event)
        data:
          type: object
          description: 'Detailed content (for workflow_started, node_started, node_finished, workflow_finished events)'
        status:
          type: integer
          description: 'HTTP status code (for error event) or execution status (data.status in node_finished, workflow_finished events)'
        code:
          type: string
          description: Error code (for error event)
        message:
          type: string
          description: Error message (for error event)
        created_at:
          type: integer
          description: Creation timestamp
    UploadedFile:
      type: object
      properties:
        id:
          type: string
          description: File ID
        name:
          type: string
          description: File name
        size:
          type: integer
          description: File size (bytes)
        extension:
          type: string
          description: File extension
        mime_type:
          type: string
          description: File mime-type
        created_by:
          type: string
          description: Uploader ID
        created_at:
          type: integer
          description: Upload time
    FileInput:
      type: object
      properties:
        type:
          type: string
          enum:
            - document
            - image
            - audio
            - video
            - custom
          description: |
            File type:
            - `document` Specific types include: 'TXT', 'MD', 'MARKDOWN', 'PDF', 'HTML', 'XLSX', 'XLS', 'DOCX', 'CSV', 'EML', 'MSG', 'PPTX', 'PPT', 'XML', 'EPUB'
            - `image` Specific types include: 'JPG', 'JPEG', 'PNG', 'GIF', 'WEBP', 'SVG'
            - `audio` Specific types include: 'MP3', 'M4A', 'WAV', 'WEBM', 'AMR'
            - `video` Specific types include: 'MP4', 'MOV', 'MPEG', 'MPGA'
            - `custom` Specific types include: other file types
        transfer_method:
          type: string
          enum:
            - remote_url
            - local_file
          description: |
            Transfer method:
            - `remote_url`: Image URL.
            - `local_file`: Upload file.
        url:
          type: string
          description: Image URL. (Only when transfer method is `remote_url`).
        upload_file_id:
          type: string
          description: Upload file ID. (Only when transfer method is `local_file`).
paths:
  /chat-messages:
    post:
      operationId: sendChatMessageByAppAdvancedChat
      summary: Send Chat Message
      description: Create conversation message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: User input/question content
                inputs:
                  type: object
                  description: 'Allows passing values for variables defined by the App. The inputs parameter contains multiple key/value pairs, where each key corresponds to a specific variable and each value is the value for that variable. Variables can be file list type. If the variable is a file list type, the corresponding value should be in list format, with each element containing the following: type, transfer_method, etc.'
                response_mode:
                  type: string
                  enum:
                    - streaming
                    - blocking
                  description: |
                    Response mode:
                    - streaming: Streaming mode (recommended), implements typewriter-like output based on SSE
                    - blocking: Blocking mode, returns result after execution is complete
                user:
                  type: string
                  description: User identifier
                conversation_id:
                  type: string
                  description: Conversation ID
                files:
                  type: array
                  description: 'File list, suitable for combining files with text understanding to answer questions, only available when the model supports Vision capabilities.'
                  items:
                    $ref: '#/components/schemas/FileInput'
                auto_generate_name:
                  type: boolean
                  description: '(Optional) Automatically generate title, default `true`. If set to `false`, you can call the conversation rename interface and set `auto_generate` to `true` to generate a title asynchronously.'
                  default: true
      x-fern-streaming:
        format: sse
        # FIXME: @l8ng fern 暂时不支持
        # stream-condition: $request.response_mode == "streaming"
        response:
          $ref: '#/components/schemas/ChatCompletionResponse'
        response-stream:
          $ref: '#/components/schemas/ChunkChatCompletionResponse'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCompletionResponse'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/ChunkChatCompletionResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '404':
          $ref: '#/components/responses/Error404'
        '500':
          $ref: '#/components/responses/Error500'
  '/chat-messages/{task_id}/stop':
    post:
      operationId: stopChatResponseByAppAdvancedChat
      summary: Stop Response
      description: Only supports streaming mode
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
          description: 'Task ID, can be obtained from the streaming response chunks'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: string
                  description: 'User identifier, must be consistent with the user passed in the message sending interface'
      responses:
        '200':
          description: Successfully stopped the response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum:
                      - success
                    description: Fixed return value 'success'
  /files/upload:
    post:
      operationId: uploadFileByAppAdvancedChat
      summary: Upload File
      description: |
        Upload files for use when sending messages.
        Supported file types depend on application type and configuration.
        Uploaded files are only available to the current end user.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload
                user:
                  type: string
                  description: User identifier
              required:
                - file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadedFile'
        '400':
          $ref: '#/components/responses/Error400'
        '413':
          description: File too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: Unsupported file type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Storage service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /audio-to-text:
    post:
      operationId: convertAudioToTextByAppAdvancedChat
      summary: Audio to Text
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Audio file
                  maxLength: 15728640
                user:
                  type: string
                  description: User identifier
                  example: user123
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    description: Converted text
  /text-to-audio:
    post:
      operationId: convertTextToAudioByAppAdvancedChat
      summary: Text to Audio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message_id:
                  type: string
                  description: Message ID
                text:
                  type: string
                  description: Text to convert
                user:
                  type: string
                  description: User identifier
      responses:
        '200':
          description: Successful response
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
  /info:
    get:
      operationId: getApplicationInfoByAppAdvancedChat
      summary: Get Application Basic Information
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Application name
                  description:
                    type: string
                    description: Application description
                  tags:
                    type: array
                    items:
                      type: string
                    description: Application tags
  /parameters:
    get:
      operationId: getApplicationParametersByAppAdvancedChat
      summary: Get Application Parameters
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  opening_statement:
                    type: string
                    description: Opening statement
                  suggested_questions:
                    type: array
                    items:
                      type: string
                    description: List of suggested opening questions
                  suggested_questions_after_answer:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: Settings for suggested questions after answer
                  speech_to_text:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: Audio to text settings
                  retriever_resource:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                    description: Citation and attribution settings
                  annotation_reply:
                    type: object
                    description: Annotation reply settings
                    properties:
                      enabled:
                        type: boolean
                        description: Whether annotation reply is enabled
                      score_threshold:
                        type: number
                        description: Similarity score threshold
                      embedding_model_name:
                        type: string
                        description: Embedding model
                      embedding_provider_name:
                        type: string
                        description: Embedding model provider
                  user_input_form:
                    type: array
                    items:
                      type: object
                    description: User input form configuration
                  file_upload:
                    type: object
                    description: File upload configuration
                  system_parameters:
                    type: object
                    description: System parameters
  '/messages/{message_id}/feedbacks':
    post:
      operationId: sendMessageFeedbackByAppAdvancedChat
      summary: Message Feedback (Like/Dislike)
      description: 'End user feedback on messages, likes/dislikes, to help application developers optimize output expectations.'
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
          description: Message ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - rating
                - user
              properties:
                rating:
                  type: string
                  enum:
                    - like
                    - dislike
                    - null
                  description: 'Like, dislike, or null to remove feedback'
                user:
                  type: string
                  description: 'User identifier, defined by the developer, must be unique within the application.'
                content:
                  type: string
                  description: Specific feedback information.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum:
                      - success
                    description: Fixed return value 'success'
  /app/feedbacks:
    get:
      operationId: getAppFeedbacksByAppAdvancedChat
      summary: Get App Feedbacks
      description: Get application's end user feedbacks and likes.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: '(Optional) Pagination, default: 1'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: '(Optional) Items per page, default: 20'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Feedback ID
                        app_id:
                          type: string
                          description: Application ID
                        conversation_id:
                          type: string
                          description: Conversation ID
                        message_id:
                          type: string
                          description: Message ID
                        rating:
                          type: string
                          enum:
                            - like
                            - dislike
                          description: Rating type
                        content:
                          type: string
                          description: Feedback content
                        from_source:
                          type: string
                          description: Source
                        from_end_user_id:
                          type: string
                          description: End user ID
                        from_account_id:
                          type: string
                          nullable: true
                          description: Account ID
                        created_at:
                          type: string
                          format: date-time
                          description: Creation time
                        updated_at:
                          type: string
                          format: date-time
                          description: Update time
                    description: List of app feedbacks
  '/messages/{message_id}/suggested':
    get:
      operationId: getSuggestedQuestionsByAppAdvancedChat
      summary: Get Suggested Questions for Next Round
      description: Get a list of suggested questions for the next round.
      parameters:
        - name: message_id
          in: path
          required: true
          schema:
            type: string
          description: Message ID
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: 'User identifier, defined by the developer, must be unique within the application.'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum:
                      - success
                    description: Fixed return value 'success'
                  data:
                    type: array
                    items:
                      type: string
                    description: List of suggested questions
  /messages:
    get:
      operationId: getConversationMessagesByAppAdvancedChat
      summary: Get Conversation History Messages
      description: 'Returns chat history in a scrolling load format, with the first page returning the latest `limit` messages, i.e., in reverse order.'
      parameters:
        - name: conversation_id
          in: query
          required: true
          schema:
            type: string
          description: Conversation ID
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: 'User identifier, defined by the developer, must be unique within the application.'
        - name: first_id
          in: query
          required: false
          schema:
            type: string
          description: 'ID of the first chat message on the current page, default null'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: 'Number of chat messages to return per request, default 20.'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Message ID
                        conversation_id:
                          type: string
                          description: Conversation ID
                        inputs:
                          type: object
                          description: User input parameters.
                        query:
                          type: string
                          description: User input / question content.
                        message_files:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                description: ID
                              type:
                                type: string
                                description: 'File type, image for images'
                              url:
                                type: string
                                description: Preview image URL
                              belongs_to:
                                type: string
                                enum:
                                  - user
                                  - assistant
                                description: 'File owner, user or assistant'
                          description: Message files
                        answer:
                          type: string
                          description: Response message content
                        created_at:
                          type: integer
                          description: Creation time
                        feedback:
                          type: object
                          properties:
                            rating:
                              type: string
                              enum:
                                - like
                                - dislike
                              description: Like or dislike
                          description: Feedback information
                        retriever_resources:
                          type: array
                          items:
                            $ref: '#/components/schemas/RetrieverResource'
                          description: List of referenced and attributed segments
                    description: Message list
                  has_more:
                    type: boolean
                    description: Whether there is a next page
                  limit:
                    type: integer
                    description: 'Number of returned items, if input exceeds system limit, returns system limit quantity'
  /conversations:
    get:
      operationId: getConversationsByAppAdvancedChat
      summary: Get Conversation List
      description: 'Get the current user''s conversation list, by default returns the most recent 20.'
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: 'User identifier, defined by the developer, must be unique within the application.'
        - name: last_id
          in: query
          required: false
          schema:
            type: string
          description: '(Optional) ID of the last record on the current page, default null'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: '(Optional) Number of records to return per request, default 20, maximum 100, minimum 1.'
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
            enum:
              - created_at
              - '-created_at'
              - updated_at
              - '-updated_at'
            default: '-updated_at'
          description: |
            (Optional) Sort field, default -updated_at (sorted by update time in descending order)
            - Available values: created_at, -created_at, updated_at, -updated_at
            - The symbol in front of the field represents ascending or descending order, - means descending
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Conversation ID
                        name:
                          type: string
                          description: 'Conversation name, by default generated by the large language model.'
                        inputs:
                          type: object
                          description: User input parameters.
                        status:
                          type: string
                          description: Conversation status
                        introduction:
                          type: string
                          description: Opening statement
                        created_at:
                          type: integer
                          description: Creation time
                        updated_at:
                          type: integer
                          description: Update time
                    description: Conversation list
                  has_more:
                    type: boolean
                    description: Whether there is more data
                  limit:
                    type: integer
                    description: 'Number of returned items, if input exceeds system limit, returns system limit quantity'
  '/conversations/{conversation_id}':
    delete:
      operationId: deleteConversationByAppAdvancedChat
      summary: Delete Conversation
      description: Delete a conversation.
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
          description: Conversation ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: string
                  description: 'User identifier, defined by the developer, must be unique within the application.'
      responses:
        '204':
          description: 'Successful response, no content'
  '/conversations/{conversation_id}/name':
    post:
      operationId: renameConversationByAppAdvancedChat
      summary: Rename Conversation
      description: 'Rename a conversation, the conversation name is used for display on clients that support multiple conversations.'
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
          description: Conversation ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                name:
                  type: string
                  description: '(Optional) Name, if `auto_generate` is `true`, this parameter can be omitted.'
                auto_generate:
                  type: boolean
                  default: false
                  description: '(Optional) Automatically generate title, default false.'
                user:
                  type: string
                  description: 'User identifier, defined by the developer, must be unique within the application.'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Conversation ID
                  name:
                    type: string
                    description: Conversation name
                  inputs:
                    type: object
                    description: User input parameters
                  status:
                    type: string
                    description: Conversation status
                  introduction:
                    type: string
                    description: Opening statement
                  created_at:
                    type: integer
                    description: Creation time
                  updated_at:
                    type: integer
                    description: Update time
  '/conversations/{conversation_id}/variables':
    get:
      operationId: getConversationVariablesByAppAdvancedChat
      summary: Get Conversation Variables
      description: Retrieve variables from a specific conversation. This endpoint is useful for extracting structured data captured during conversations.
      parameters:
        - name: conversation_id
          in: path
          required: true
          schema:
            type: string
          description: The conversation ID to retrieve variables from.
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: 'User identifier, defined by developer rules, must be unique within the application.'
        - name: last_id
          in: query
          required: false
          schema:
            type: string
          description: '(Optional) ID of the last record on the current page, default null'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: '(Optional) Number of records to return per request, default 20, maximum 100, minimum 1.'
        - name: variable_name
          in: query
          required: false
          schema:
            type: string
          description: (Optional) Variable name filter
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  limit:
                    type: integer
                    description: Items per page
                  has_more:
                    type: boolean
                    description: Whether there is more data
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Variable ID
                        name:
                          type: string
                          description: Variable name
                        value_type:
                          type: string
                          description: 'Variable type (string, number, boolean, etc.)'
                        value:
                          type: string
                          description: Variable value
                        description:
                          type: string
                          description: Variable description
                        created_at:
                          type: integer
                          description: Creation timestamp
                        updated_at:
                          type: integer
                          description: Last update timestamp
                    description: Variable list
        '404':
          description: Conversation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - conversation_not_exists
                    description: Error code
                  message:
                    type: string
                    description: Error message
  /meta:
    get:
      operationId: getAppMetaInfoByAppAdvancedChat
      summary: Get App Meta Information
      description: Used to get tool icons
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  tool_icons:
                    type: object
                    description: Tool icons
                    additionalProperties:
                      oneOf:
                        - type: object
                          properties:
                            background:
                              type: string
                              description: Background color in hex format
                            content:
                              type: string
                              description: Emoji
                        - type: string
                          description: Icon URL
  /site:
    get:
      operationId: getAppWebAppSettingsByAppAdvancedChat
      summary: Get App WebApp Settings
      description: Used to get the WebApp settings of the application
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: WebApp name
                  chat_color_theme:
                    type: string
                    description: 'Chat color theme, hex format'
                  chat_color_theme_inverted:
                    type: boolean
                    description: Whether the chat color theme is inverted
                  icon_type:
                    type: string
                    enum:
                      - emoji
                      - image
                    description: 'Icon type, `emoji` or `image`'
                  icon:
                    type: string
                    description: 'Icon, if type is `emoji`, this is an emoji character, if type is `image`, this is an image URL'
                  icon_background:
                    type: string
                    description: Background color in hex format
                  icon_url:
                    type: string
                    nullable: true
                    description: Icon URL
                  description:
                    type: string
                    description: Description
                  copyright:
                    type: string
                    description: Copyright information
                  privacy_policy:
                    type: string
                    description: Privacy policy link
                  custom_disclaimer:
                    type: string
                    description: Custom disclaimer
                  default_language:
                    type: string
                    description: Default language
                  show_workflow_steps:
                    type: boolean
                    description: Whether to show workflow details
                  use_icon_as_answer_icon:
                    type: boolean
                    description: "Whether to use the WebApp icon to replace the \U0001F916 in chat"
  /apps/annotations:
    get:
      operationId: getAnnotationsListByAppAdvancedChat
      summary: Get Annotation List
      description: Get the list of annotations for the application
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Items per page
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved annotation list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Annotation ID
                        question:
                          type: string
                          description: Question
                        answer:
                          type: string
                          description: Answer
                        hit_count:
                          type: integer
                          description: Hit count
                        created_at:
                          type: integer
                          description: Creation timestamp
                  has_more:
                    type: boolean
                    description: Whether there is more data
                  limit:
                    type: integer
                    description: Items per page
                  total:
                    type: integer
                    description: Total record count
                  page:
                    type: integer
                    description: Current page number
    post:
      operationId: createAnnotationByAppAdvancedChat
      summary: Create Annotation
      description: Create a new annotation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - answer
              properties:
                question:
                  type: string
                  description: Question
                answer:
                  type: string
                  description: Answer
      responses:
        '200':
          description: Successfully created annotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Annotation ID
                  question:
                    type: string
                    description: Question
                  answer:
                    type: string
                    description: Answer
                  hit_count:
                    type: integer
                    description: Hit count
                  created_at:
                    type: integer
                    description: Creation timestamp
  '/apps/annotations/{annotation_id}':
    put:
      operationId: updateAnnotationByAppAdvancedChat
      summary: Update Annotation
      description: Update a specific annotation
      parameters:
        - name: annotation_id
          in: path
          description: Annotation ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - answer
              properties:
                question:
                  type: string
                  description: Question
                answer:
                  type: string
                  description: Answer
      responses:
        '200':
          description: Successfully updated annotation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Annotation ID
                  question:
                    type: string
                    description: Question
                  answer:
                    type: string
                    description: Answer
                  hit_count:
                    type: integer
                    description: Hit count
                  created_at:
                    type: integer
                    description: Creation timestamp
    delete:
      operationId: deleteAnnotationByAppAdvancedChat
      summary: Delete Annotation
      description: Delete a specific annotation
      parameters:
        - name: annotation_id
          in: path
          description: Annotation ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Successfully deleted annotation, no content'
  '/apps/annotation-reply/{action}':
    post:
      operationId: configureAnnotationReplyByAppAdvancedChat
      summary: Initialize Annotation Reply Settings
      description: Enable or disable annotation reply functionality
      parameters:
        - name: action
          in: path
          description: 'Action, can only be ''enable'' or ''disable'''
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                embedding_provider_name:
                  type: string
                  description: 'Specified embedding model provider, must be configured in the system first, corresponds to the provider field'
                embedding_model_name:
                  type: string
                  description: 'Specified embedding model, corresponds to the model field'
                score_threshold:
                  type: number
                  description: 'Similarity score threshold, when similarity is greater than this threshold, the system will automatically reply, otherwise it will not reply'
      responses:
        '200':
          description: Successfully enabled or disabled annotation reply
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    description: Job ID
                  job_status:
                    type: string
                    description: Job status
  '/apps/annotation-reply/{action}/status/{job_id}':
    get:
      operationId: getAnnotationReplyStatusByAppAdvancedChat
      summary: Check Annotation Reply Settings Status
      description: Query the status of annotation reply initialization task
      parameters:
        - name: action
          in: path
          description: 'Action, can only be ''enable'' or ''disable'', and must be consistent with the action in the annotation reply initialization interface'
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
        - name: job_id
          in: path
          description: 'Job ID, returned from the annotation reply initialization interface'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved job status
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    description: Job ID
                  job_status:
                    type: string
                    description: Job status
                  error_msg:
                    type: string
                    description: Error message

